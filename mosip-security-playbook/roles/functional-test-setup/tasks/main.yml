- name: Update maven repository with settings file
  copy:
    src: "{{ item }}"
    dest: "{{ maven_dir }}"
  with_fileglob:
    - "{{ utils_dir }}/settings.xml"

- name: Check testrig directory.
  stat:
    path: "{{ testrig_dir }}"
  register: testrig_folder

- debug:
    msg: "Specified version of testrig already exist"
  when: testrig_folder.stat.exists == true

- pause:
    prompt: "Do you want to clone and build again (yes/no)?"
  register: check_for_rebuild
  when: testrig_folder.stat.exists == true

- name: "Deleting old build"
  file:
    path: "{{ testrig_dir }}"
    state: absent
  when: check_for_rebuild == 'yes'

- name: Downloading upgraded build version
  unarchive:
    src: "https://github.com/mosip/mosip-functional-tests/archive/{{ testrig_version }}.zip"
    dest: "{{ tools_dir }}"
    remote_src: yes
  when: check_for_rebuild == 'yes'

- name: Bulding upgraded partner demo service for dependency
  shell: "cd {{ testrig_dir }}/authentication-partnerdemo-service/ && mvn clean install"
  when: check_for_rebuild == 'yes'

- name: Bulding upgraded test-rig
  shell: "cd {{ testrig_dir }}/automationtests && mvn clean install"
  when: check_for_rebuild == 'yes'

- name: Copy jar file to test testrig directory
  shell: "mv {{ testrig_dir }}/automationtests/target/*dependencies.jar {{ testrig_dir }}/automationtests/target/automationtests.jar"
  when: check_for_rebuild == 'yes'

- name: Sceduling upgraded Cronjob for test-rig
  cron:
    name: "{{  item  }}"
    minute: "{{ (((30|int + ansible_loop.index|int) % 2|int) * 30|int)|int }}"
    hour: "{{((((ansible_loop.index|int)+((ansible_loop.index|int) % 2)) / 2|int)+(schedule_time|int - 1|int))| int }}"
    job: "cd {{ testrig_dir }}/automationtests/target/ && java -jar -Dmodules={{ item }} -Denv.user=qa -Denv.endpoint=https://qa.mosip.net -Denv.testLevel=smokeAndRegression automationtests.jar"
  loop: "{{ modules }}"
  loop_control:
    extended: yes
  when: check_for_rebuild == 'yes'

- name: Download new version of Functional Test
  unarchive:
    src: "https://github.com/mosip/mosip-functional-tests/archive/{{ testrig_version }}.zip"
    dest: "{{ tools_dir }}"
    remote_src: yes
  when: testrig_folder.stat.exists == false

- name: Bulding new version of partner demo service for dependency
  shell: "cd {{ testrig_dir }}/authentication-partnerdemo-service/ && mvn clean install"
  when: testrig_folder.stat.exists == false

- name: Bulding new version of test-rig
  shell: "cd {{ testrig_dir }}/automationtests && mvn clean install"
  when: testrig_folder.stat.exists == false

- name: Copy jar file to test testrig directory
  shell: "mv {{ testrig_dir }}/automationtests/target/*dependencies.jar {{ testrig_dir }}/automationtests/target/automationtests.jar"
  when: testrig_folder.stat.exists == false

- name: Sceduling upgraded Cronjob for test-rig
  cron:
    name: "{{  item  }}"
    minute: "{{ (((30|int + ansible_loop.index|int) % 2|int) * 30|int)|int }}"
    hour: "{{((((ansible_loop.index|int)+((ansible_loop.index|int) % 2)) / 2|int)+(schedule_time|int - 1|int))| int }}"
    job: "cd {{ testrig_dir }}/automationtests/target/ && java -jar -Dmodules={{ item }} -Denv.user=qa -Denv.endpoint=https://qa.mosip.net -Denv.testLevel=smokeAndRegression automationtests.jar"
  loop: "{{ modules }}"
  loop_control:
    extended: yes
  when: testrig_folder.stat.exists == false